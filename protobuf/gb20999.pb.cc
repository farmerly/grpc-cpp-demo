// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gb20999.proto

#include "gb20999.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class PhaseUploadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhaseUploadRequest> _instance;
} _PhaseUploadRequest_default_instance_;
class PhaseUploadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhaseUploadResponse> _instance;
} _PhaseUploadResponse_default_instance_;
class PhaseDownloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhaseDownloadRequest> _instance;
} _PhaseDownloadRequest_default_instance_;
class PhaseDownloadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhaseDownloadResponse> _instance;
} _PhaseDownloadResponse_default_instance_;
class PlanUploadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlanUploadRequest> _instance;
} _PlanUploadRequest_default_instance_;
class PlanUploadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlanUploadResponse> _instance;
} _PlanUploadResponse_default_instance_;
class PlanDownloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlanDownloadRequest> _instance;
} _PlanDownloadRequest_default_instance_;
class PlanDownloadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlanDownloadResponse> _instance;
} _PlanDownloadResponse_default_instance_;
class StageUploadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StageUploadRequest> _instance;
} _StageUploadRequest_default_instance_;
class StageUploadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StageUploadResponse> _instance;
} _StageUploadResponse_default_instance_;
class StageDownloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StageDownloadRequest> _instance;
} _StageDownloadRequest_default_instance_;
class StageDownloadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StageDownloadResponse> _instance;
} _StageDownloadResponse_default_instance_;
static void InitDefaultsscc_info_PhaseDownloadRequest_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PhaseDownloadRequest_default_instance_;
    new (ptr) ::PhaseDownloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PhaseDownloadRequest_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PhaseDownloadRequest_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PhaseDownloadResponse_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PhaseDownloadResponse_default_instance_;
    new (ptr) ::PhaseDownloadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PhaseDownloadResponse_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PhaseDownloadResponse_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PhaseUploadRequest_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PhaseUploadRequest_default_instance_;
    new (ptr) ::PhaseUploadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PhaseUploadRequest_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PhaseUploadRequest_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PhaseUploadResponse_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PhaseUploadResponse_default_instance_;
    new (ptr) ::PhaseUploadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PhaseUploadResponse_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PhaseUploadResponse_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PlanDownloadRequest_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PlanDownloadRequest_default_instance_;
    new (ptr) ::PlanDownloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlanDownloadRequest_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlanDownloadRequest_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PlanDownloadResponse_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PlanDownloadResponse_default_instance_;
    new (ptr) ::PlanDownloadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlanDownloadResponse_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlanDownloadResponse_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PlanUploadRequest_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PlanUploadRequest_default_instance_;
    new (ptr) ::PlanUploadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlanUploadRequest_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlanUploadRequest_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_PlanUploadResponse_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PlanUploadResponse_default_instance_;
    new (ptr) ::PlanUploadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlanUploadResponse_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlanUploadResponse_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_StageDownloadRequest_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StageDownloadRequest_default_instance_;
    new (ptr) ::StageDownloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StageDownloadRequest_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StageDownloadRequest_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_StageDownloadResponse_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StageDownloadResponse_default_instance_;
    new (ptr) ::StageDownloadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StageDownloadResponse_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StageDownloadResponse_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_StageUploadRequest_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StageUploadRequest_default_instance_;
    new (ptr) ::StageUploadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StageUploadRequest_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StageUploadRequest_gb20999_2eproto}, {}};

static void InitDefaultsscc_info_StageUploadResponse_gb20999_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_StageUploadResponse_default_instance_;
    new (ptr) ::StageUploadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StageUploadResponse_gb20999_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StageUploadResponse_gb20999_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gb20999_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gb20999_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gb20999_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gb20999_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhaseUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhaseUploadRequest, crossid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhaseUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhaseUploadResponse, reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhaseDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhaseDownloadRequest, crossid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhaseDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhaseDownloadResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PlanUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PlanUploadRequest, crossid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PlanUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PlanUploadResponse, reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PlanDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PlanDownloadRequest, crossid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PlanDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PlanDownloadResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StageUploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StageUploadRequest, crossid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StageUploadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StageUploadResponse, reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StageDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StageDownloadRequest, crossid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::StageDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::StageDownloadResponse, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PhaseUploadRequest)},
  { 6, -1, sizeof(::PhaseUploadResponse)},
  { 12, -1, sizeof(::PhaseDownloadRequest)},
  { 18, -1, sizeof(::PhaseDownloadResponse)},
  { 24, -1, sizeof(::PlanUploadRequest)},
  { 30, -1, sizeof(::PlanUploadResponse)},
  { 36, -1, sizeof(::PlanDownloadRequest)},
  { 42, -1, sizeof(::PlanDownloadResponse)},
  { 48, -1, sizeof(::StageUploadRequest)},
  { 54, -1, sizeof(::StageUploadResponse)},
  { 60, -1, sizeof(::StageDownloadRequest)},
  { 66, -1, sizeof(::StageDownloadResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PhaseUploadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PhaseUploadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PhaseDownloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PhaseDownloadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PlanUploadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PlanUploadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PlanDownloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PlanDownloadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StageUploadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StageUploadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StageDownloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_StageDownloadResponse_default_instance_),
};

const char descriptor_table_protodef_gb20999_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rgb20999.proto\"%\n\022PhaseUploadRequest\022\017\n"
  "\007crossId\030\001 \001(\t\"$\n\023PhaseUploadResponse\022\r\n"
  "\005reply\030\001 \001(\t\"\'\n\024PhaseDownloadRequest\022\017\n\007"
  "crossId\030\001 \001(\t\"\'\n\025PhaseDownloadResponse\022\016"
  "\n\006result\030\001 \001(\010\"$\n\021PlanUploadRequest\022\017\n\007c"
  "rossId\030\001 \001(\t\"#\n\022PlanUploadResponse\022\r\n\005re"
  "ply\030\001 \001(\t\"&\n\023PlanDownloadRequest\022\017\n\007cros"
  "sId\030\001 \001(\t\"&\n\024PlanDownloadResponse\022\016\n\006res"
  "ult\030\001 \001(\010\"%\n\022StageUploadRequest\022\017\n\007cross"
  "Id\030\001 \001(\t\"$\n\023StageUploadResponse\022\r\n\005reply"
  "\030\001 \001(\t\"\'\n\024StageDownloadRequest\022\017\n\007crossI"
  "d\030\001 \001(\t\"\'\n\025StageDownloadResponse\022\016\n\006resu"
  "lt\030\001 \001(\0102\204\003\n\016Gb20999Service\022:\n\013phaseUplo"
  "ad\022\023.PhaseUploadRequest\032\024.PhaseUploadRes"
  "ponse\"\000\022@\n\rphaseDownload\022\025.PhaseDownload"
  "Request\032\026.PhaseDownloadResponse\"\000\0227\n\npla"
  "nUpload\022\022.PlanUploadRequest\032\023.PlanUpload"
  "Response\"\000\022=\n\014planDownload\022\024.PlanDownloa"
  "dRequest\032\025.PlanDownloadResponse\"\000\022:\n\013sta"
  "geUpload\022\023.StageUploadRequest\032\024.StageUpl"
  "oadResponse\"\000\022@\n\rstageDownload\022\025.StageDo"
  "wnloadRequest\032\026.StageDownloadResponse\"\000B"
  "&\n\024org.example.protobufB\014Gb20999ProtoP\001b"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gb20999_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gb20999_2eproto_sccs[12] = {
  &scc_info_PhaseDownloadRequest_gb20999_2eproto.base,
  &scc_info_PhaseDownloadResponse_gb20999_2eproto.base,
  &scc_info_PhaseUploadRequest_gb20999_2eproto.base,
  &scc_info_PhaseUploadResponse_gb20999_2eproto.base,
  &scc_info_PlanDownloadRequest_gb20999_2eproto.base,
  &scc_info_PlanDownloadResponse_gb20999_2eproto.base,
  &scc_info_PlanUploadRequest_gb20999_2eproto.base,
  &scc_info_PlanUploadResponse_gb20999_2eproto.base,
  &scc_info_StageDownloadRequest_gb20999_2eproto.base,
  &scc_info_StageDownloadResponse_gb20999_2eproto.base,
  &scc_info_StageUploadRequest_gb20999_2eproto.base,
  &scc_info_StageUploadResponse_gb20999_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gb20999_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gb20999_2eproto = {
  false, false, descriptor_table_protodef_gb20999_2eproto, "gb20999.proto", 927,
  &descriptor_table_gb20999_2eproto_once, descriptor_table_gb20999_2eproto_sccs, descriptor_table_gb20999_2eproto_deps, 12, 0,
  schemas, file_default_instances, TableStruct_gb20999_2eproto::offsets,
  file_level_metadata_gb20999_2eproto, 12, file_level_enum_descriptors_gb20999_2eproto, file_level_service_descriptors_gb20999_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gb20999_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gb20999_2eproto)), true);

// ===================================================================

class PhaseUploadRequest::_Internal {
 public:
};

PhaseUploadRequest::PhaseUploadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PhaseUploadRequest)
}
PhaseUploadRequest::PhaseUploadRequest(const PhaseUploadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_crossid().empty()) {
    crossid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:PhaseUploadRequest)
}

void PhaseUploadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PhaseUploadRequest_gb20999_2eproto.base);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PhaseUploadRequest::~PhaseUploadRequest() {
  // @@protoc_insertion_point(destructor:PhaseUploadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PhaseUploadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PhaseUploadRequest::ArenaDtor(void* object) {
  PhaseUploadRequest* _this = reinterpret_cast< PhaseUploadRequest* >(object);
  (void)_this;
}
void PhaseUploadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PhaseUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhaseUploadRequest& PhaseUploadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhaseUploadRequest_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PhaseUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PhaseUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crossid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PhaseUploadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string crossId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PhaseUploadRequest.crossId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhaseUploadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhaseUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crossid().data(), static_cast<int>(this->_internal_crossid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PhaseUploadRequest.crossId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crossid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhaseUploadRequest)
  return target;
}

size_t PhaseUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhaseUploadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crossid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhaseUploadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhaseUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PhaseUploadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhaseUploadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhaseUploadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhaseUploadRequest)
    MergeFrom(*source);
  }
}

void PhaseUploadRequest::MergeFrom(const PhaseUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhaseUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crossid().size() > 0) {
    _internal_set_crossid(from._internal_crossid());
  }
}

void PhaseUploadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhaseUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhaseUploadRequest::CopyFrom(const PhaseUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhaseUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhaseUploadRequest::IsInitialized() const {
  return true;
}

void PhaseUploadRequest::InternalSwap(PhaseUploadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crossid_.Swap(&other->crossid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PhaseUploadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PhaseUploadResponse::_Internal {
 public:
};

PhaseUploadResponse::PhaseUploadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PhaseUploadResponse)
}
PhaseUploadResponse::PhaseUploadResponse(const PhaseUploadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reply().empty()) {
    reply_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reply(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:PhaseUploadResponse)
}

void PhaseUploadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PhaseUploadResponse_gb20999_2eproto.base);
  reply_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PhaseUploadResponse::~PhaseUploadResponse() {
  // @@protoc_insertion_point(destructor:PhaseUploadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PhaseUploadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reply_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PhaseUploadResponse::ArenaDtor(void* object) {
  PhaseUploadResponse* _this = reinterpret_cast< PhaseUploadResponse* >(object);
  (void)_this;
}
void PhaseUploadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PhaseUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhaseUploadResponse& PhaseUploadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhaseUploadResponse_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PhaseUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PhaseUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PhaseUploadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reply();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PhaseUploadResponse.reply"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhaseUploadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhaseUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PhaseUploadResponse.reply");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhaseUploadResponse)
  return target;
}

size_t PhaseUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhaseUploadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhaseUploadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhaseUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PhaseUploadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhaseUploadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhaseUploadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhaseUploadResponse)
    MergeFrom(*source);
  }
}

void PhaseUploadResponse::MergeFrom(const PhaseUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhaseUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reply().size() > 0) {
    _internal_set_reply(from._internal_reply());
  }
}

void PhaseUploadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhaseUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhaseUploadResponse::CopyFrom(const PhaseUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhaseUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhaseUploadResponse::IsInitialized() const {
  return true;
}

void PhaseUploadResponse::InternalSwap(PhaseUploadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reply_.Swap(&other->reply_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PhaseUploadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PhaseDownloadRequest::_Internal {
 public:
};

PhaseDownloadRequest::PhaseDownloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PhaseDownloadRequest)
}
PhaseDownloadRequest::PhaseDownloadRequest(const PhaseDownloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_crossid().empty()) {
    crossid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:PhaseDownloadRequest)
}

void PhaseDownloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PhaseDownloadRequest_gb20999_2eproto.base);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PhaseDownloadRequest::~PhaseDownloadRequest() {
  // @@protoc_insertion_point(destructor:PhaseDownloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PhaseDownloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PhaseDownloadRequest::ArenaDtor(void* object) {
  PhaseDownloadRequest* _this = reinterpret_cast< PhaseDownloadRequest* >(object);
  (void)_this;
}
void PhaseDownloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PhaseDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhaseDownloadRequest& PhaseDownloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhaseDownloadRequest_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PhaseDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PhaseDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crossid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PhaseDownloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string crossId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PhaseDownloadRequest.crossId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhaseDownloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhaseDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crossid().data(), static_cast<int>(this->_internal_crossid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PhaseDownloadRequest.crossId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crossid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhaseDownloadRequest)
  return target;
}

size_t PhaseDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhaseDownloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crossid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhaseDownloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhaseDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PhaseDownloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhaseDownloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhaseDownloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhaseDownloadRequest)
    MergeFrom(*source);
  }
}

void PhaseDownloadRequest::MergeFrom(const PhaseDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhaseDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crossid().size() > 0) {
    _internal_set_crossid(from._internal_crossid());
  }
}

void PhaseDownloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhaseDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhaseDownloadRequest::CopyFrom(const PhaseDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhaseDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhaseDownloadRequest::IsInitialized() const {
  return true;
}

void PhaseDownloadRequest::InternalSwap(PhaseDownloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crossid_.Swap(&other->crossid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PhaseDownloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PhaseDownloadResponse::_Internal {
 public:
};

PhaseDownloadResponse::PhaseDownloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PhaseDownloadResponse)
}
PhaseDownloadResponse::PhaseDownloadResponse(const PhaseDownloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:PhaseDownloadResponse)
}

void PhaseDownloadResponse::SharedCtor() {
  result_ = false;
}

PhaseDownloadResponse::~PhaseDownloadResponse() {
  // @@protoc_insertion_point(destructor:PhaseDownloadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PhaseDownloadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PhaseDownloadResponse::ArenaDtor(void* object) {
  PhaseDownloadResponse* _this = reinterpret_cast< PhaseDownloadResponse* >(object);
  (void)_this;
}
void PhaseDownloadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PhaseDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhaseDownloadResponse& PhaseDownloadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhaseDownloadResponse_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PhaseDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PhaseDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PhaseDownloadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhaseDownloadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhaseDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhaseDownloadResponse)
  return target;
}

size_t PhaseDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhaseDownloadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhaseDownloadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhaseDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PhaseDownloadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhaseDownloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhaseDownloadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhaseDownloadResponse)
    MergeFrom(*source);
  }
}

void PhaseDownloadResponse::MergeFrom(const PhaseDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhaseDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void PhaseDownloadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhaseDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhaseDownloadResponse::CopyFrom(const PhaseDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhaseDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhaseDownloadResponse::IsInitialized() const {
  return true;
}

void PhaseDownloadResponse::InternalSwap(PhaseDownloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PhaseDownloadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlanUploadRequest::_Internal {
 public:
};

PlanUploadRequest::PlanUploadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlanUploadRequest)
}
PlanUploadRequest::PlanUploadRequest(const PlanUploadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_crossid().empty()) {
    crossid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:PlanUploadRequest)
}

void PlanUploadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlanUploadRequest_gb20999_2eproto.base);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlanUploadRequest::~PlanUploadRequest() {
  // @@protoc_insertion_point(destructor:PlanUploadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlanUploadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlanUploadRequest::ArenaDtor(void* object) {
  PlanUploadRequest* _this = reinterpret_cast< PlanUploadRequest* >(object);
  (void)_this;
}
void PlanUploadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlanUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanUploadRequest& PlanUploadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlanUploadRequest_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PlanUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlanUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crossid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlanUploadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string crossId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PlanUploadRequest.crossId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlanUploadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlanUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crossid().data(), static_cast<int>(this->_internal_crossid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PlanUploadRequest.crossId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crossid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlanUploadRequest)
  return target;
}

size_t PlanUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlanUploadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crossid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanUploadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlanUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanUploadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlanUploadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlanUploadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlanUploadRequest)
    MergeFrom(*source);
  }
}

void PlanUploadRequest::MergeFrom(const PlanUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlanUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crossid().size() > 0) {
    _internal_set_crossid(from._internal_crossid());
  }
}

void PlanUploadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlanUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanUploadRequest::CopyFrom(const PlanUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlanUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanUploadRequest::IsInitialized() const {
  return true;
}

void PlanUploadRequest::InternalSwap(PlanUploadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crossid_.Swap(&other->crossid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlanUploadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlanUploadResponse::_Internal {
 public:
};

PlanUploadResponse::PlanUploadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlanUploadResponse)
}
PlanUploadResponse::PlanUploadResponse(const PlanUploadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reply().empty()) {
    reply_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reply(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:PlanUploadResponse)
}

void PlanUploadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlanUploadResponse_gb20999_2eproto.base);
  reply_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlanUploadResponse::~PlanUploadResponse() {
  // @@protoc_insertion_point(destructor:PlanUploadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlanUploadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reply_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlanUploadResponse::ArenaDtor(void* object) {
  PlanUploadResponse* _this = reinterpret_cast< PlanUploadResponse* >(object);
  (void)_this;
}
void PlanUploadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlanUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanUploadResponse& PlanUploadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlanUploadResponse_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PlanUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlanUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlanUploadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reply();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PlanUploadResponse.reply"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlanUploadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlanUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PlanUploadResponse.reply");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlanUploadResponse)
  return target;
}

size_t PlanUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlanUploadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanUploadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlanUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanUploadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlanUploadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlanUploadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlanUploadResponse)
    MergeFrom(*source);
  }
}

void PlanUploadResponse::MergeFrom(const PlanUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlanUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reply().size() > 0) {
    _internal_set_reply(from._internal_reply());
  }
}

void PlanUploadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlanUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanUploadResponse::CopyFrom(const PlanUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlanUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanUploadResponse::IsInitialized() const {
  return true;
}

void PlanUploadResponse::InternalSwap(PlanUploadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reply_.Swap(&other->reply_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlanUploadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlanDownloadRequest::_Internal {
 public:
};

PlanDownloadRequest::PlanDownloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlanDownloadRequest)
}
PlanDownloadRequest::PlanDownloadRequest(const PlanDownloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_crossid().empty()) {
    crossid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:PlanDownloadRequest)
}

void PlanDownloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlanDownloadRequest_gb20999_2eproto.base);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlanDownloadRequest::~PlanDownloadRequest() {
  // @@protoc_insertion_point(destructor:PlanDownloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlanDownloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlanDownloadRequest::ArenaDtor(void* object) {
  PlanDownloadRequest* _this = reinterpret_cast< PlanDownloadRequest* >(object);
  (void)_this;
}
void PlanDownloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlanDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanDownloadRequest& PlanDownloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlanDownloadRequest_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PlanDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PlanDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crossid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlanDownloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string crossId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PlanDownloadRequest.crossId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlanDownloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlanDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crossid().data(), static_cast<int>(this->_internal_crossid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PlanDownloadRequest.crossId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crossid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlanDownloadRequest)
  return target;
}

size_t PlanDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlanDownloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crossid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanDownloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlanDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanDownloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlanDownloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlanDownloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlanDownloadRequest)
    MergeFrom(*source);
  }
}

void PlanDownloadRequest::MergeFrom(const PlanDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlanDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crossid().size() > 0) {
    _internal_set_crossid(from._internal_crossid());
  }
}

void PlanDownloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlanDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanDownloadRequest::CopyFrom(const PlanDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlanDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanDownloadRequest::IsInitialized() const {
  return true;
}

void PlanDownloadRequest::InternalSwap(PlanDownloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crossid_.Swap(&other->crossid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlanDownloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlanDownloadResponse::_Internal {
 public:
};

PlanDownloadResponse::PlanDownloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PlanDownloadResponse)
}
PlanDownloadResponse::PlanDownloadResponse(const PlanDownloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:PlanDownloadResponse)
}

void PlanDownloadResponse::SharedCtor() {
  result_ = false;
}

PlanDownloadResponse::~PlanDownloadResponse() {
  // @@protoc_insertion_point(destructor:PlanDownloadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlanDownloadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PlanDownloadResponse::ArenaDtor(void* object) {
  PlanDownloadResponse* _this = reinterpret_cast< PlanDownloadResponse* >(object);
  (void)_this;
}
void PlanDownloadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlanDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlanDownloadResponse& PlanDownloadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlanDownloadResponse_gb20999_2eproto.base);
  return *internal_default_instance();
}


void PlanDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PlanDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlanDownloadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlanDownloadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PlanDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlanDownloadResponse)
  return target;
}

size_t PlanDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlanDownloadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanDownloadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlanDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanDownloadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlanDownloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlanDownloadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlanDownloadResponse)
    MergeFrom(*source);
  }
}

void PlanDownloadResponse::MergeFrom(const PlanDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlanDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void PlanDownloadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlanDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanDownloadResponse::CopyFrom(const PlanDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlanDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanDownloadResponse::IsInitialized() const {
  return true;
}

void PlanDownloadResponse::InternalSwap(PlanDownloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlanDownloadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StageUploadRequest::_Internal {
 public:
};

StageUploadRequest::StageUploadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StageUploadRequest)
}
StageUploadRequest::StageUploadRequest(const StageUploadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_crossid().empty()) {
    crossid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StageUploadRequest)
}

void StageUploadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StageUploadRequest_gb20999_2eproto.base);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StageUploadRequest::~StageUploadRequest() {
  // @@protoc_insertion_point(destructor:StageUploadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StageUploadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StageUploadRequest::ArenaDtor(void* object) {
  StageUploadRequest* _this = reinterpret_cast< StageUploadRequest* >(object);
  (void)_this;
}
void StageUploadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StageUploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageUploadRequest& StageUploadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StageUploadRequest_gb20999_2eproto.base);
  return *internal_default_instance();
}


void StageUploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StageUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crossid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StageUploadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string crossId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StageUploadRequest.crossId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StageUploadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StageUploadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crossid().data(), static_cast<int>(this->_internal_crossid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StageUploadRequest.crossId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crossid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StageUploadRequest)
  return target;
}

size_t StageUploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StageUploadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crossid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageUploadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StageUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StageUploadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StageUploadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StageUploadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StageUploadRequest)
    MergeFrom(*source);
  }
}

void StageUploadRequest::MergeFrom(const StageUploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StageUploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crossid().size() > 0) {
    _internal_set_crossid(from._internal_crossid());
  }
}

void StageUploadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StageUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageUploadRequest::CopyFrom(const StageUploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StageUploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageUploadRequest::IsInitialized() const {
  return true;
}

void StageUploadRequest::InternalSwap(StageUploadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crossid_.Swap(&other->crossid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StageUploadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StageUploadResponse::_Internal {
 public:
};

StageUploadResponse::StageUploadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StageUploadResponse)
}
StageUploadResponse::StageUploadResponse(const StageUploadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_reply().empty()) {
    reply_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reply(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StageUploadResponse)
}

void StageUploadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StageUploadResponse_gb20999_2eproto.base);
  reply_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StageUploadResponse::~StageUploadResponse() {
  // @@protoc_insertion_point(destructor:StageUploadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StageUploadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reply_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StageUploadResponse::ArenaDtor(void* object) {
  StageUploadResponse* _this = reinterpret_cast< StageUploadResponse* >(object);
  (void)_this;
}
void StageUploadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StageUploadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageUploadResponse& StageUploadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StageUploadResponse_gb20999_2eproto.base);
  return *internal_default_instance();
}


void StageUploadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StageUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StageUploadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_reply();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StageUploadResponse.reply"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StageUploadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StageUploadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply().data(), static_cast<int>(this->_internal_reply().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StageUploadResponse.reply");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StageUploadResponse)
  return target;
}

size_t StageUploadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StageUploadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string reply = 1;
  if (this->reply().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageUploadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StageUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StageUploadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StageUploadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StageUploadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StageUploadResponse)
    MergeFrom(*source);
  }
}

void StageUploadResponse::MergeFrom(const StageUploadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StageUploadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reply().size() > 0) {
    _internal_set_reply(from._internal_reply());
  }
}

void StageUploadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StageUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageUploadResponse::CopyFrom(const StageUploadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StageUploadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageUploadResponse::IsInitialized() const {
  return true;
}

void StageUploadResponse::InternalSwap(StageUploadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reply_.Swap(&other->reply_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StageUploadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StageDownloadRequest::_Internal {
 public:
};

StageDownloadRequest::StageDownloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StageDownloadRequest)
}
StageDownloadRequest::StageDownloadRequest(const StageDownloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_crossid().empty()) {
    crossid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_crossid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:StageDownloadRequest)
}

void StageDownloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StageDownloadRequest_gb20999_2eproto.base);
  crossid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StageDownloadRequest::~StageDownloadRequest() {
  // @@protoc_insertion_point(destructor:StageDownloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StageDownloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  crossid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StageDownloadRequest::ArenaDtor(void* object) {
  StageDownloadRequest* _this = reinterpret_cast< StageDownloadRequest* >(object);
  (void)_this;
}
void StageDownloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StageDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageDownloadRequest& StageDownloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StageDownloadRequest_gb20999_2eproto.base);
  return *internal_default_instance();
}


void StageDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:StageDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crossid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StageDownloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string crossId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_crossid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "StageDownloadRequest.crossId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StageDownloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StageDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_crossid().data(), static_cast<int>(this->_internal_crossid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "StageDownloadRequest.crossId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_crossid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StageDownloadRequest)
  return target;
}

size_t StageDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StageDownloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string crossId = 1;
  if (this->crossid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_crossid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageDownloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StageDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StageDownloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StageDownloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StageDownloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StageDownloadRequest)
    MergeFrom(*source);
  }
}

void StageDownloadRequest::MergeFrom(const StageDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StageDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crossid().size() > 0) {
    _internal_set_crossid(from._internal_crossid());
  }
}

void StageDownloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StageDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageDownloadRequest::CopyFrom(const StageDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StageDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageDownloadRequest::IsInitialized() const {
  return true;
}

void StageDownloadRequest::InternalSwap(StageDownloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  crossid_.Swap(&other->crossid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StageDownloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class StageDownloadResponse::_Internal {
 public:
};

StageDownloadResponse::StageDownloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:StageDownloadResponse)
}
StageDownloadResponse::StageDownloadResponse(const StageDownloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:StageDownloadResponse)
}

void StageDownloadResponse::SharedCtor() {
  result_ = false;
}

StageDownloadResponse::~StageDownloadResponse() {
  // @@protoc_insertion_point(destructor:StageDownloadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StageDownloadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StageDownloadResponse::ArenaDtor(void* object) {
  StageDownloadResponse* _this = reinterpret_cast< StageDownloadResponse* >(object);
  (void)_this;
}
void StageDownloadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StageDownloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StageDownloadResponse& StageDownloadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StageDownloadResponse_gb20999_2eproto.base);
  return *internal_default_instance();
}


void StageDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:StageDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StageDownloadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StageDownloadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:StageDownloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:StageDownloadResponse)
  return target;
}

size_t StageDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:StageDownloadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StageDownloadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StageDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StageDownloadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StageDownloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StageDownloadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StageDownloadResponse)
    MergeFrom(*source);
  }
}

void StageDownloadResponse::MergeFrom(const StageDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StageDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void StageDownloadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StageDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StageDownloadResponse::CopyFrom(const StageDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StageDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StageDownloadResponse::IsInitialized() const {
  return true;
}

void StageDownloadResponse::InternalSwap(StageDownloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StageDownloadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PhaseUploadRequest* Arena::CreateMaybeMessage< ::PhaseUploadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PhaseUploadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PhaseUploadResponse* Arena::CreateMaybeMessage< ::PhaseUploadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PhaseUploadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::PhaseDownloadRequest* Arena::CreateMaybeMessage< ::PhaseDownloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PhaseDownloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PhaseDownloadResponse* Arena::CreateMaybeMessage< ::PhaseDownloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PhaseDownloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::PlanUploadRequest* Arena::CreateMaybeMessage< ::PlanUploadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PlanUploadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PlanUploadResponse* Arena::CreateMaybeMessage< ::PlanUploadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PlanUploadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::PlanDownloadRequest* Arena::CreateMaybeMessage< ::PlanDownloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PlanDownloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::PlanDownloadResponse* Arena::CreateMaybeMessage< ::PlanDownloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PlanDownloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::StageUploadRequest* Arena::CreateMaybeMessage< ::StageUploadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StageUploadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::StageUploadResponse* Arena::CreateMaybeMessage< ::StageUploadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StageUploadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::StageDownloadRequest* Arena::CreateMaybeMessage< ::StageDownloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StageDownloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::StageDownloadResponse* Arena::CreateMaybeMessage< ::StageDownloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::StageDownloadResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
